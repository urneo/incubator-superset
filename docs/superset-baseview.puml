@startuml

skinparam classBackgroundColor White
skinparam classArrowColor Black
skinparam classBorderColor Black
skinparam stereotypeCBackgroundColor Gray

hide circle
hide members

' ModelView -u-|> RestCRUDView
' ModelView <|-- SupersetModelView

' SupersetModelView <|-- QueryView
' SupersetModelView <|-- SavedQueryView
' SupersetModelView <|-- DatabaseView
' SupersetModelView <|-- AccessRequestsModelView
' SupersetModelView <|-- SliceModelView
' SupersetModelView <|-- DashboardModelView
' SupersetModelView <|-- LogModelView
' SupersetModelView <|-- CssTemplateModelView
' SavedQueryViewApi -u-|> SavedQueryView

' DeleteMixin <|-- SavedQueryView
' DeleteMixin <|-- SliceModelView
' DeleteMixin <|-- AccessRequestsModelView
' DeleteMixin <|-- DashboardModelView
' DeleteMixin <|-- DatabaseView

BaseView <|-- BaseSupersetView
BaseView <|-- IndexView
BaseView <|-- BaseFormView
BaseView <|-- BaseModelView

BaseView <|-- MultipleView
BaseView <|-- UtilView

DatabaseView <|-- DatabaseAsync
DatabaseView <|-- DatabaseTablesAsync
SliceModelView <|-- SliceAsync
SliceModelView <|-- SliceAddView

DashboardModelView <|-- DashboardModelViewAsync
CssTemplateModelView <|-- CssTemplateAsyncModelView

BaseCRUDView -u-|> BaseModelView
BaseCRUDView <|-- MasterDetailView
BaseCRUDView <|-- RestCRUDView


BaseFormView <|-- SimpleFormView
BaseFormView <|-- PublicFormView

BaseSupersetView <|-- Superset
BaseSupersetView <|-- SqlLab
' BaseSupersetView <|-- KV
' BaseSupersetView <|-- R

class MasterDetailView <views.py>
class MultipleView <views.py>
class IndexView <views.py>
class UtilView <views.py>
class SimpleFormView <views.py>
class PublicFormView <views.py>
class RestCRUDView <views.py>
class SqlLab <sql_lab.py>

' SupersetFilter -u-|> BaseFilter
' SupersetFilter <|-- SliceFilter
' SupersetFilter <|-- DashboardFilter


class ModelView <RestCRUDView> {
    +list()
    +show(pk)
    +add()
    +edit(pk)
    +delete(pk)
    +download(filename)
    +action(name, pk)
    +action_post()
}

class SliceFilter <core.py>
class DashboardFilter <core.py>
class DatabaseView <core.py>
class DatabaseAsync <core.py>
class DatabaseTablesAsync <core.py>
class AccessRequestsModelView <core.py>
class SliceModelView <core.py>
class SliceAsync <core.py>
class SliceAddView <core.py>
class DashboardModelView <core.py>
class DashboardModelViewAsync <core.py>
class LogModelView <core.py>
class KV <core.py>
class R <core.py>
class Superset <core.py>
class CssTemplateModelView <core.py>
class CssTemplateAsyncModelView <core.py>
class RegexConverter <core.py>

class BaseSupersetView <core.py>
class SupersetModelView <core.py>
class ListWidgetWithCheckboxes <core.py>
class DeleteMixin <core.py>
class SupersetFilter <core.py>
class DatasourceFilter <core.py>

class MasterDetailView {
    +list(pk=None)
}

class Superset {
	+update_role():
	+datasources():
	+override_role_permissions():
	+request_access():
	+approve():
	+slice(slice_id):
	+explore_json(datasource_type, datasource_id):
	+explorev2(datasource_type, datasource_id):
	+explore(datasource_type, datasource_id):
	+filter(datasource_type, datasource_id, column):
	+checkbox(model_view, id_, attr, value):
	+activity_per_day():
	+schemas(db_id):
	+tables(db_id, schema, substr):
	+copy_dash(dashboard_id):
	+save_dash(dashboard_id):
	+add_slices(dashboard_id):
	+testconn():
	+recent_activity(user_id):
	+csrf_token():
	+fave_dashboards_by_username(username):
	+fave_dashboards(user_id):
	+created_dashboards(user_id):
	+created_slices(user_id):
	+fave_slices(user_id):
	+warm_up_cache():
	+favstar(class_name, obj_id, action):
	+dashboard(dashboard_id):
	+theme():
	+queries(last_updated_ms):
	+welcome():
	+profile(username):
	+sqllab():    
}

@enduml